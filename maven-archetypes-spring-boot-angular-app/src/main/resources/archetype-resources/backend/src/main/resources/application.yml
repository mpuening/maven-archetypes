spring:

  ldap:
    embedded:
      base-dn: dc=example,dc=org
      credential:
        username: uid=admin
        password: secret
      ldif: classpath:people.ldif
      port: 8389
      validation:
        enabled: false

  security:
    oauth2:

      authorizationserver:
        client:
          app-client:
            registration:
              client-id: app-client
              client-secret: "{noop}secret1"
              client-authentication-methods:
                - client_secret_basic
                - client_secret_post
              authorization-grant-types:
                - authorization_code
                - refresh_token
              redirect-uris:
                - http://localhost:8080/login/oauth2/code/app-client
                - http://localhost:8080/swagger-ui/oauth2-redirect.html
              post-logout-redirect-uris:
                - http://localhost:8080/logged-out
              scopes:
                - openid
                - profile
            require-authorization-consent: true

      client:
        provider:
          azure:
            authorization-uri: ${azure.login-url}/${azure.tenant}/oauth2/v2.0/authorize
            token-uri: ${azure.login-url}/${azure.tenant}/oauth2/v2.0/token
            jwk-set-uri: ${azure.login-url}/${azure.tenant}/discovery/v2.0/keys
          spring:
            #issuer-uri: http://127.0.0.1:8080
            authorization-uri: http://127.0.0.1:8080/oauth2/authorize
            token-uri: http://127.0.0.1:8080/oauth2/token
            jwk-set-uri: http://127.0.0.1:8080/oauth2/jwks

        registration:
#          app-client:
#            provider: azure
#            client-name: app-client
#            client-id: AZURE_CLIENT_ID_GOES_HERE
#            client-authentication-method: none
#            authorization-grant-type: authorization_code
#            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
#            scope:
#              - openid
#              - offline_access
#              - profile
          app-client:
            provider: spring
            client-name: app-client
            client-id: app-client
            client-secret: secret1
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            scope:
              - openid
              - profile

      resourceserver:
        jwt:
          #jwk-set-uri: ${azure.login-url}/${azure.tenant}/discovery/v2.0/keys
          #issuer-uri: http://127.0.0.1:8080
          jwk-set-uri: http://127.0.0.1:8080/oauth2/jwks
          audiences: app-client

  datasource:
    driver-class-name: org.h2.Driver
    url: jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    username: sa
    password: ''
  sql:
    init:
      mode: always
  h2:
    console:
      enabled: true

# For debugging purposes
management:
  endpoints:
    web:
      exposure:
        include: "*"

#logging:
#  level:
#    org.springframework.security: trace

springdoc:
  swagger-ui:
    operationsSorter: alpha

azure:
  tenant: TENANT_ID_GOES_HERE
  login-url: https://login.microsoftonline.com
  logout-url: https://login.windows.net/${azure.tenant}/oauth2/logout
  
# See http://127.0.0.1:8080/.well-known/openid-configuration
app:
  security:
    ldap-url: ldap://localhost:8389/dc=example,dc=org
    end-session-endpoint: http://127.0.0.1:8080/connect/logout
    oauth2:
      authorization-uri: http://127.0.0.1:8080/oauth2/authorize
      token-uri: http://127.0.0.1:8080/oauth2/token
